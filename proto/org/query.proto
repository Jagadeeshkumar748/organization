syntax = "proto3";
package org.org;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "org/params.proto";
import "org/user.proto";


// this line is used by starport scaffolding # 1

option go_package = "org/x/org/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/org/org/params";
  }
  // Queries a list of Users items.
	rpc Users(QueryUsersRequest) returns (QueryUsersResponse) {
		option (google.api.http).get = "/org/org/users";
	}

// Queries a list of OneUser items.
	rpc OneUser(QueryOneUserRequest) returns (QueryOneUserResponse) {
		option (google.api.http).get = "/org/org/one_user/{userid}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryUsersRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;

}

message QueryUsersResponse {
  repeated User User = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;

}

message QueryOneUserRequest {
  string userid = 1;
}

message QueryOneUserResponse {
  // string name = 1;
  // string email = 2;
  User User = 1;
}

// this line is used by starport scaffolding # 3
